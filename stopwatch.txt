This text has two copies of code for document<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Stop-Watch</title>
    <link rel="shortcut icon" type="image/jpg" href="https://media.musclegrid.io/kangsblackbeltacademy.com/uploads/2020/09/08195006/emoji-clock-face-sticker-alarm-clocks-emoji.jpg"/>
</head>

<body>
    <div id="stopwatch">
        <div id="stopWatch-display">00:00:00:00</div>
        <input type="button" value="Reset" class="stopWatch-buttons" id="stopWatch-reset" disabled />
        <input type="button" value="Start" class="stopWatch-buttons" id="stopWatch-start" disabled />
        <input type="button" value="Save" class="stopWatch-buttons" id="stopWatch-save" disabled />
    </div>
    <table class="table">
        <thead>
            <tr>
                <th>Saved Time</th>
                <th>Date of Data Entry</th>
            </tr>
        </thead>
        <tbody id="timeSaveTable"></tbody>
    </table>
</body>
<script>

    var stopWatch = {

        // variable/property initialization
        displayedTime: null, // HTML time display
        resetButton: null, // HTML reset button
        toggleWatch: null, // HTML start/stop button
        saveTime: null,
        timeTable: null,
        timeTracker: null, // timer object
        elapsedTime: 0, // current elapsed time
        durationKeeper : new Date(),

        initialization: function () {
            // DOM selectors initialized
            stopWatch.displayedTime = document.getElementById("stopWatch-display");
            stopWatch.resetButton = document.getElementById("stopWatch-reset");
            stopWatch.toggleWatch = document.getElementById("stopWatch-start");
            stopWatch.saveTime = document.getElementById("stopWatch-save");
            stopWatch.timeTable = document.getElementById("timeSaveTable");

            // Using DOM to 'enable' our buttons *this prevents a slower computer from clicking the button and refreshing the page
            stopWatch.resetButton.addEventListener("click", stopWatch.reset);
            stopWatch.resetButton.disabled = false;

            stopWatch.toggleWatch.addEventListener("click", stopWatch.start);
            stopWatch.toggleWatch.disabled = false;

            stopWatch.saveTime.addEventListener("click", stopWatch.save);
            stopWatch.saveTime.disabled = false;
        },
        start: function () {},
        tick: function () {},
        save: function () {},
        stop: function () {},
        reset: function () {}
    };
    window.addEventListener("DOMContentLoaded", stopWatch.init);

</script>










<style>
    * {
        font-family: Arial, Helvetica, sans-serif;
    }

    /*https://blog.avada.io/css/animated-backgrounds/ - this background is from here*/
    body {
        display: flex;
        justify-content: space-evenly;
        background: linear-gradient(90deg,
                #d1d0ff 0%,
                #f9ffce 30%,
                #d2f8ff 67%,
                #dbffd9 100%);
        background-size: 1000%;
        /* -webkit-animation: animatedBackground 20s linear alternate infinite;
        animation: animatedBackground 20s linear alternate infinite; */
    }

    @-webkit-keyframes animatedBackground {
        from {
            background-position: 0 0;
        }

        to {
            background-position: 100% 0;
        }
    }

    @keyframes animatedBackground {
        from {
            background-position: 0 0;
        }

        to {
            background-position: 100% 0;
        }
    }

    .table {
        position: relative;
        margin: 0 auto;
        width: 60vw;
        height: 2.5em;
        /* color: rgba(0, 0, 255, 0); */
        color: white;
        text-decoration: unset;
        /* z-index: 100; */
        /* background: linear-gradient(0deg, #000, #272727); */
    }

    /*https://www.sliderrevolution.com/resources/css-border-animation/ - table head background is here*/

    .table:before,
    .table:after {
        content: "";
        position: absolute;
        left: -0.2em;
        top: -0.3em;
        background: linear-gradient(45deg,
                #fb0094,
                #0000ff,
                #00ff00,
                #ffff00,
                #ff0000,
                #fb0094,
                #0000ff,
                #00ff00,
                #ffff00,
                #ff0000);
        background-size: 400%;
        width: calc(100% + 4px);
        height: calc(100% + 4px);
        z-index: -1;
        /* delete or comment out the 'animation' below to stop the animation*/
        /* animation: movingColors 20s linear infinite; */
    }
    @keyframes movingColors {
        0% {
            background-position: 0 0;
        }

        50% {
            background-position: 400% 0;
        }

        100% {
            background-position: 0 0;
        }
    }

    .table:after {
        filter: blur(50px);
    }

    table {
        display: inline-block;
        font-size: 1.4em;
    }

    tbody>tr {
        background-color: rgba(105, 105, 105, 0.3);
        box-shadow: .1em .1em 1em 0.1em rgb(43, 43, 43);
        border: transparent;
    }

    tr:nth-child(even) {
        background-color: rgba(105, 105, 105, 0.6);
    }

    tr:hover {
        background-color: rgba(245, 245, 245, 0.185);
        color: black;
    }

    th {
        padding-top: 12px;
        padding-bottom: 12px;
        text-align: left;
        width: 30vw;
        margin: 1em auto;
        background-color: transparent;
    }

    #stopwatch {
        display: flex;
        flex-wrap: wrap;
        max-width: 320px;
        margin: 0;
        border: 0.5em palegoldenrod outset;
        box-shadow: 1em 1em 1em 0.5em;
    }

    #stopWatch-display {
        width: 100%;
        padding: 20px 0;
        font-size: 48px;
        font-weight: bold;
        text-align: center;
        background: #000;
        border: palegoldenrod inset 0.1em;
        color: #fff;
    }

    .stopWatch-buttons {
        box-sizing: border-box;
        width: 50%;
        cursor: pointer;
        padding: 20px 0;
        border: palegoldenrod inset 0.1em;
        color: #fff;
        font-size: 20px;
    }

    #stopWatch-reset {
        background-color: #a32208;
    }

    #stopWatch-start {
        background-color: #20a308;
    }

    #stopWatch-save {
        background-color: rgb(0, 115, 153);
        width: 100%;
    }
</style>
</html>
//****************************************************************************************************************************************
Greg Vacca  9:34 PM
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Stop-Watch</title>
    <link rel="shortcut icon" type="image/jpg" href="https://media.musclegrid.io/kangsblackbeltacademy.com/uploads/2020/09/08195006/emoji-clock-face-sticker-alarm-clocks-emoji.jpg"/>
</head>

<body>
    <div id="stopwatch">
        <div id="stopWatch-display">00:00:00:00</div>
        <input type="button" value="Reset" class="stopWatch-buttons" id="stopWatch-reset" disabled />
        <input type="button" value="Start" class="stopWatch-buttons" id="stopWatch-start" disabled />
        <input type="button" value="Save" class="stopWatch-buttons" id="stopWatch-save" disabled />
    </div>
    <table class="table">
        <thead>
            <tr>
                <th>Saved Time</th>
                <th>Date of Data Entry</th>
            </tr>
        </thead>
        <tbody id="timeSaveTable"></tbody>
    </table>
</body>
<script defer>

    var stopWatch = {

        // variable/property initialization
        displayedTime: null, // HTML time display
        resetButton: null, // HTML reset button
        toggleWatch: null, // HTML start/stop button
        saveTime: null,
        timeTable: null,
        timeTracker: null, // timer object
        elapsedTime: 0, // current elapsed time
        durationKeeper : new Date(),
        
        initialization: function () {
            // DOM selectors initialized
            stopWatch.displayedTime = document.getElementById("stopWatch-display");
            stopWatch.resetButton = document.getElementById("stopWatch-reset");
            stopWatch.toggleWatch = document.getElementById("stopWatch-start");
            stopWatch.saveTime = document.getElementById("stopWatch-save");
            stopWatch.timeTable = document.getElementById("timeSaveTable");

            // Using DOM to 'enable' our buttons *this prevents a slower computer from clicking the button and refreshing the page
            stopWatch.resetButton.addEventListener("click", stopWatch.reset);
            stopWatch.resetButton.disabled = false;

            stopWatch.toggleWatch.addEventListener("click", stopWatch.start);
            stopWatch.toggleWatch.disabled = false;

            stopWatch.saveTime.addEventListener("click", stopWatch.save);
            stopWatch.saveTime.disabled = false;
        },

        start: function () {
            stopWatch.timeTracker = setInterval(stopWatch.tick, 1)
            stopWatch.toggleWatch.style.backgroundColor = "orange";
            stopWatch.toggleWatch.value = "Stop";
            stopWatch.toggleWatch.removeEventListener("click", stopWatch.start);
            stopWatch.toggleWatch.addEventListener("click", stopWatch.stop);

        },
        tick: function () {

            //stopWatch.elapsedTime == milliseconds passed since hitting start
            stopWatch.elapsedTime++
            let milliseconds = stopWatch.elapsedTime;
            let seconds = Math.floor(milliseconds / 100);
            let minutes = Math.floor(seconds / 60);
            let hours = Math.floor(minutes / 60);

            //millisecond formatter
            if(milliseconds >= 100){milliseconds = milliseconds % 100};
            if(milliseconds < 10){milliseconds = "0" + milliseconds};

            //second formatter
            if(seconds >= 60){seconds = seconds % 60};
            if(seconds < 10){seconds = "0" + seconds};

            //minutes formatter
            if(minutes < 10){minutes = "0" + minutes};
            if(minutes >= 60){minutes = minutes % 60};


            //hours formatter
            if(hours < 10){hours = "0" + hours};


            stopWatch.displayedTime.innerText = hours + ":" + minutes + ":" + seconds + ":" + milliseconds;
        },
        save: function () {

            let newDataEntry = document.createElement("td");
            let newDateEntry = document.createElement("td");
            newDateEntry.innerText = new Date();
            let newTableRow = document.createElement("tr");
            newDataEntry.innerText = stopWatch.displayedTime.innerText;

            newTableRow.appendChild(newDataEntry);
            newTableRow.appendChild(newDateEntry);

            stopWatch.timeTable.appendChild(newTableRow)

        },

        stop: function () {
            clearInterval(stopWatch.timeTracker)
            stopWatch.toggleWatch.style.backgroundColor = "#20a308";
            stopWatch.toggleWatch.value = "Start";
            stopWatch.toggleWatch.removeEventListener("click", stopWatch.stop);
            stopWatch.toggleWatch.addEventListener("click", stopWatch.start);
        },

        reset: function () {
            stopWatch.stop();
            stopWatch.displayedTime.innerText =  "00:00:00:00";
            stopWatch.elapsedTime = 0;
        }
    };
    window.addEventListener("DOMContentLoaded", stopWatch.initialization);

</script>










<style>
    * {
        font-family: Arial, Helvetica, sans-serif;
    }

    /*https://blog.avada.io/css/animated-backgrounds/ - this background is from here*/
    body {
        display: flex;
        justify-content: space-evenly;
        background: linear-gradient(90deg,
                #d1d0ff 0%,
                #f9ffce 30%,
                #d2f8ff 67%,
                #dbffd9 100%);
        background-size: 1000%;
        /* -webkit-animation: animatedBackground 20s linear alternate infinite;
        animation: animatedBackground 20s linear alternate infinite; */
    }

    @-webkit-keyframes animatedBackground {
        from {
            background-position: 0 0;
        }

        to {
            background-position: 100% 0;
        }
    }

    @keyframes animatedBackground {
        from {
            background-position: 0 0;
        }

        to {
            background-position: 100% 0;
        }
    }

    .table {
        position: relative;
        margin: 0 auto;
        width: 60vw;
        height: 2.5em;
        /* color: rgba(0, 0, 255, 0); */
        color: white;
        text-decoration: unset;
        /* z-index: 100; */
        /* background: linear-gradient(0deg, #000, #272727); */
    }

    /*https://www.sliderrevolution.com/resources/css-border-animation/ - table head background is here*/

    .table:before,
    .table:after {
        content: "";
        position: absolute;
        left: -0.2em;
        top: -0.3em;
        background: linear-gradient(45deg,
                #fb0094,
                #0000ff,
                #00ff00,
                #ffff00,
                #ff0000,
                #fb0094,
                #0000ff,
                #00ff00,
                #ffff00,
                #ff0000);
        background-size: 400%;
        width: calc(100% + 4px);
        height: calc(100% + 4px);
        z-index: -1;
        /* delete or comment out the 'animation' below to stop the animation*/
        /* animation: movingColors 20s linear infinite; */
    }
    @keyframes movingColors {
        0% {
            background-position: 0 0;
        }

        50% {
            background-position: 400% 0;
        }

        100% {
            background-position: 0 0;
        }
    }

    .table:after {
        filter: blur(50px);
    }

    table {
        display: inline-block;
        font-size: 1.4em;
    }

    tbody>tr {
        background-color: rgba(105, 105, 105, 0.3);
        box-shadow: .1em .1em 1em 0.1em rgb(43, 43, 43);
        border: transparent;
    }

    tr:nth-child(even) {
        background-color: rgba(105, 105, 105, 0.6);
    }

    tr:hover {
        background-color: rgba(245, 245, 245, 0.185);
        color: black;
    }

    th {
        padding-top: 12px;
        padding-bottom: 12px;
        text-align: left;
        width: 30vw;
        margin: 1em auto;
        background-color: transparent;
    }

    #stopwatch {
        display: flex;
        flex-wrap: wrap;
        max-width: 320px;
        margin: 0;
        border: 0.5em palegoldenrod outset;
        box-shadow: 1em 1em 1em 0.5em;
    }

    #stopWatch-display {
        width: 100%;
        padding: 20px 0;
        font-size: 48px;
        font-weight: bold;
        text-align: center;
        background: #000;
        border: palegoldenrod inset 0.1em;
        color: #fff;
    }

    .stopWatch-buttons {
        box-sizing: border-box;
        width: 50%;
        cursor: pointer;
        padding: 20px 0;
        border: palegoldenrod inset 0.1em;
        color: #fff;
        font-size: 20px;
    }

    #stopWatch-reset {
        background-color: #a32208;
    }

    #stopWatch-start {
        background-color: #20a308;
    }

    #stopWatch-save {
        background-color: rgb(0, 115, 153);
        width: 100%;
    }
</style>
</html>